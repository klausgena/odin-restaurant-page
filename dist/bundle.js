(()=>{var n={426:(n,e,t)=>{"use strict";t.d(e,{Z:()=>y});var r=t(684),o=t.n(r),i=t(645),a=t.n(i),s=t(667),A=t.n(s),l=new URL(t(725),t.b),c=new URL(t(776),t.b),m=new URL(t(544),t.b),u=new URL(t(762),t.b),f=new URL(t(715),t.b),d=a()(o()),p=A()(l),h=A()(c),B=A()(m),g=A()(u),C=A()(f);d.push([n.id,`@font-face {\n    font-family : 'OswaldBold';\n    src: url(${p}) format('truetype');\n}\n@font-face {\n    font-family : 'OswaldRegular';\n    src: url(${h}) format('truetype');\n}\n@font-face {\n    font-family : 'OswaldLight';\n    src: url(${B}) format('truetype');\n}\n@font-face {\n    font-family : 'AlfaSlab';\n    src: url(${g}) format('truetype');\n}\n@font-face {\n    font-family : 'OpenSans';\n    src: url(${C}) format('truetype');\n}\n:root {\n    --white: #f4fdff;\n    --red: #ff5a5f;\n    --blue: #087e8b;\n    --black: #000600;\n}\nbody {\n    margin: 0;\n    background-color: var(--white);\n}\n#content {\n    width: 1200px;\n    margin: auto;\n}\n#header-menu-left h1 {\n    color: var(--blue);\n    font-family: 'OswaldBold';\n    font-size: 2rem;\n}\n#menu-ul {\n    list-style: none;\n    font-family: 'OswaldLight';\n    text-align: right;\n    font-size: 1.5rem;\n    color: var(--red);\n}\n#menu-ul li {\n    display: inline;\n    margin-left: 1rem;\n}\n#header-menu {\n    width: 80%;\n    margin: auto;\n    display:grid;\n    grid-template-columns: 1fr 1fr;\n    align-items: center;\n    padding: 0 1rem 0 1rem;\n}  \n#hero {\n    position: relative;\n}\n#hero img {\n    width: 100%;\n    height: 100%;\n}\n#hero h2 {\n    position:absolute;\n    bottom: -4rem;\n    right: 2rem;\n    font-family: 'OswaldBold';\n    font-size: 9rem;\n    line-height: 9rem;\n    color: var(--white);\n    text-align: right;\n    margin-left: 25%;\n    }\n#text {\n    display: grid;\n    grid-template-columns: repeat(12, 1fr);\n}\n#description {\n    grid-column: 1/5;\n    padding-right: 4rem;\n    margin-left: 1rem;\n}\n#description h2 {\n    font-family: 'OswaldBold';\n    color: var(--black);\n    font-size: 2.5rem;\n    line-height: 2.5rem;\n    text-align: left;\n}\n#description p {\n    font-family: 'OpenSans';\n    font-size: 1.4rem;\n    color: var(--black);\n}\n#bio {\n    grid-column: 5/8;\n    margin-top: 2.5rem;\n}\n#bio p {\n    font-family: 'OpenSans';\n    color: var(--black);\n    font-size: 1.2rem;\n    padding: 1.2rem;\n}\n#reviews {\n    grid-column: 8/13;\n    margin-right: 1rem;\n    margin-left: 4rem;\n}\n#reviews h3 {\n \tfont-family: OswaldRegular;\n\tfont-size: 3rem;\n\tline-height: 3.5rem;\n\tcolor: var(--red);\n\tborder-bottom: 4px solid var(--red);\n\tpadding-bottom: 3.5rem;\n\ttext-align: left;\n}\n#footer {\n\tcolor: var(--blue);\n\tborder-top: 1px solid;\n\tfont-size: 0.8rem;\n\tpadding: 1rem;\n\ttext-align: center;\n\ttext-transform: uppercase;\n\tfont-family: 'OswaldRegular';\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,0BAA0B;IAC1B,+DAAsD;AAC1D;AACA;IACI,6BAA6B;IAC7B,+DAAyD;AAC7D;AACA;IACI,2BAA2B;IAC3B,+DAAuD;AAC3D;AACA;IACI,wBAAwB;IACxB,+DAA8D;AAClE;AACA;IACI,wBAAwB;IACxB,+DAA2D;AAC/D;AACA;IACI,gBAAgB;IAChB,cAAc;IACd,eAAe;IACf,gBAAgB;AACpB;AACA;IACI,SAAS;IACT,8BAA8B;AAClC;AACA;IACI,aAAa;IACb,YAAY;AAChB;AACA;IACI,kBAAkB;IAClB,yBAAyB;IACzB,eAAe;AACnB;AACA;IACI,gBAAgB;IAChB,0BAA0B;IAC1B,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;AACrB;AACA;IACI,eAAe;IACf,iBAAiB;AACrB;AACA;IACI,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,8BAA8B;IAC9B,mBAAmB;IACnB,sBAAsB;AAC1B;AACA;IACI,kBAAkB;AACtB;AACA;IACI,WAAW;IACX,YAAY;AAChB;AACA;IACI,iBAAiB;IACjB,aAAa;IACb,WAAW;IACX,yBAAyB;IACzB,eAAe;IACf,iBAAiB;IACjB,mBAAmB;IACnB,iBAAiB;IACjB,gBAAgB;IAChB;AACJ;IACI,aAAa;IACb,sCAAsC;AAC1C;AACA;IACI,gBAAgB;IAChB,mBAAmB;IACnB,iBAAiB;AACrB;AACA;IACI,yBAAyB;IACzB,mBAAmB;IACnB,iBAAiB;IACjB,mBAAmB;IACnB,gBAAgB;AACpB;AACA;IACI,uBAAuB;IACvB,iBAAiB;IACjB,mBAAmB;AACvB;AACA;IACI,gBAAgB;IAChB,kBAAkB;AACtB;AACA;IACI,uBAAuB;IACvB,mBAAmB;IACnB,iBAAiB;IACjB,eAAe;AACnB;AACA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,iBAAiB;AACrB;AACA;EACE,0BAA0B;CAC3B,eAAe;CACf,mBAAmB;CACnB,iBAAiB;CACjB,mCAAmC;CACnC,sBAAsB;CACtB,gBAAgB;AACjB;AACA;CACC,kBAAkB;CAClB,qBAAqB;CACrB,iBAAiB;CACjB,aAAa;CACb,kBAAkB;CAClB,yBAAyB;CACzB,4BAA4B;AAC7B",sourcesContent:["@font-face {\n    font-family : 'OswaldBold';\n    src: url('./fonts/Oswald-Bold.ttf') format('truetype');\n}\n@font-face {\n    font-family : 'OswaldRegular';\n    src: url('./fonts/Oswald-Regular.ttf') format('truetype');\n}\n@font-face {\n    font-family : 'OswaldLight';\n    src: url('./fonts/Oswald-Light.ttf') format('truetype');\n}\n@font-face {\n    font-family : 'AlfaSlab';\n    src: url('./fonts/AlfaSlabOne-Regular.ttf') format('truetype');\n}\n@font-face {\n    font-family : 'OpenSans';\n    src: url('./fonts/OpenSans-Regular.ttf') format('truetype');\n}\n:root {\n    --white: #f4fdff;\n    --red: #ff5a5f;\n    --blue: #087e8b;\n    --black: #000600;\n}\nbody {\n    margin: 0;\n    background-color: var(--white);\n}\n#content {\n    width: 1200px;\n    margin: auto;\n}\n#header-menu-left h1 {\n    color: var(--blue);\n    font-family: 'OswaldBold';\n    font-size: 2rem;\n}\n#menu-ul {\n    list-style: none;\n    font-family: 'OswaldLight';\n    text-align: right;\n    font-size: 1.5rem;\n    color: var(--red);\n}\n#menu-ul li {\n    display: inline;\n    margin-left: 1rem;\n}\n#header-menu {\n    width: 80%;\n    margin: auto;\n    display:grid;\n    grid-template-columns: 1fr 1fr;\n    align-items: center;\n    padding: 0 1rem 0 1rem;\n}  \n#hero {\n    position: relative;\n}\n#hero img {\n    width: 100%;\n    height: 100%;\n}\n#hero h2 {\n    position:absolute;\n    bottom: -4rem;\n    right: 2rem;\n    font-family: 'OswaldBold';\n    font-size: 9rem;\n    line-height: 9rem;\n    color: var(--white);\n    text-align: right;\n    margin-left: 25%;\n    }\n#text {\n    display: grid;\n    grid-template-columns: repeat(12, 1fr);\n}\n#description {\n    grid-column: 1/5;\n    padding-right: 4rem;\n    margin-left: 1rem;\n}\n#description h2 {\n    font-family: 'OswaldBold';\n    color: var(--black);\n    font-size: 2.5rem;\n    line-height: 2.5rem;\n    text-align: left;\n}\n#description p {\n    font-family: 'OpenSans';\n    font-size: 1.4rem;\n    color: var(--black);\n}\n#bio {\n    grid-column: 5/8;\n    margin-top: 2.5rem;\n}\n#bio p {\n    font-family: 'OpenSans';\n    color: var(--black);\n    font-size: 1.2rem;\n    padding: 1.2rem;\n}\n#reviews {\n    grid-column: 8/13;\n    margin-right: 1rem;\n    margin-left: 4rem;\n}\n#reviews h3 {\n \tfont-family: OswaldRegular;\n\tfont-size: 3rem;\n\tline-height: 3.5rem;\n\tcolor: var(--red);\n\tborder-bottom: 4px solid var(--red);\n\tpadding-bottom: 3.5rem;\n\ttext-align: left;\n}\n#footer {\n\tcolor: var(--blue);\n\tborder-top: 1px solid;\n\tfont-size: 0.8rem;\n\tpadding: 1rem;\n\ttext-align: center;\n\ttext-transform: uppercase;\n\tfont-family: 'OswaldRegular';\n}\n"],sourceRoot:""}]);const y=d},645:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);r&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},667:n=>{"use strict";n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},684:n=>{"use strict";n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},695:n=>{n.exports=[["name","price","desc","pic"],["erwt","0,99","chlorofyl",""],["mayo","0,40","olie",""],["kruimel","20","budget",""],["friet","1,5","weelde",""],["pasta","3,00","overdaad",""],["ketchup","0,3","warm",""],[""]]},379:n=>{"use strict";var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],s=0;s<n.length;s++){var A=n[s],l=r.base?A[0]+r.base:A[0],c=i[l]||0,m="".concat(l," ").concat(c);i[l]=c+1;var u=t(m),f={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(f);else{var d=o(f,r);r.byIndex=s,e.splice(s,0,{identifier:m,updater:d,references:1})}a.push(m)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=t(i[a]);e[s].references--}for(var A=r(n,o),l=0;l<i.length;l++){var c=t(i[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=A}}},569:n=>{"use strict";var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{"use strict";n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{"use strict";n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},762:(n,e,t)=>{"use strict";n.exports=t.p+"76486fb5cc170dab15a5.ttf"},715:(n,e,t)=>{"use strict";n.exports=t.p+"b8cc747a58ffa52b7ff9.ttf"},725:(n,e,t)=>{"use strict";n.exports=t.p+"41669c1e4f6bdc605d26.ttf"},544:(n,e,t)=>{"use strict";n.exports=t.p+"ba7a0a165ea1a69244a7.ttf"},776:(n,e,t)=>{"use strict";n.exports=t.p+"31bce04a1ae8549b1464.ttf"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!n;)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{"use strict";function n(n,e,t,r){const o=new Image(t,r),i=document.getElementById(e);o.src=n,i.appendChild(o)}function e(n,e,t,r){const o=document.createElement(n),i=document.getElementById(t);o.textContent=e,r&&o.setAttribute("id",r),i.appendChild(o)}function r(n,t,r){t.forEach((t=>e(n,t,r)))}const o=t.p+"ed95e35e77284e87b6b0.jpg",i=t.p+"e4b6826184a6ae792038.jpg",a=JSON.parse('{"WL":{"T":"Where Gastronomy Meets Minimalism","k":["Welcome to PrestoPresto, where the art of gastronomy meets\\nminimalism in a groundbreaking culinary adventure. Our\\navant-garde restaurant redefines traditional dining, offering an\\nunparalleled experience where less truly becomes more. Situated\\nat the intersection of fashion and gastronomy, PrestoPresto\\nboasts an innovative menu that challenges conventional\\nnorms—each dish is a masterpiece of subtlety, featuring\\nminiature portions that celebrate the essence of flavor.","With meticulous precision, our chefs craft exquisite\\npresentations that elevate the dining experience to an art\\nform. Embracing the philosophy of less is more, our menu showcases\\na harmonious blend of premium ingredients expertly curated into\\nminimalistic compositions, such as a single pea infused with\\nunparalleled taste sensations.","The ambiance mirrors our culinary ethos, with sleek,\\ncontemporary decor and an atmosphere that encourages savoring each\\nbite mindfully. PrestoPresto invites you to indulge in a new\\nparadigm of dining, where culinary minimalism ignites a symphony\\nof flavors and stimulates the senses."]},"A":"Helmut Klein, a 50-year-old German-born contemporary artist, transitioned his passion for creativity from canvas to cuisine as the visionary behind PrestoPresto. With an avant-garde approach, he blends artistic expression with culinary minimalism, redefining gastronomy as an immersive sensory experience.\\n","A9":["Epicurean Elegance Weekly - PrestoPresto astounds with gastronomic miracles—1 pea, a revolutionized indulgence!","Gourmet Gazette - Behold! PrestoPresto, where the petite portions pack a pretentious punch!","Culinary Connoisseur Chronicles - Dine at PrestoPresto: Less is more, where hunger meets satire!"]}');function s(){e("div","","content","hero"),n(o,"hero",1920,1280),e("h2","All you can't eat - and less!","hero"),e("div","","content","text"),e("div","","text","description"),e("div","","text","bio"),e("div","","text","reviews"),e("h2",a.WL.T,"description"),r("p",a.WL.k,"description"),n(i,"bio",300,450),e("p",a.A,"bio"),r("h3",a.A9,"reviews")}var A=t(695),l=t.n(A);alert(l()),console.log(l());var c=t(379),m=t.n(c),u=t(795),f=t.n(u),d=t(569),p=t.n(d),h=t(565),B=t.n(h),g=t(216),C=t.n(g),y=t(589),v=t.n(y),b=t(426),I={};I.styleTagTransform=v(),I.setAttributes=B(),I.insert=p().bind(null,"head"),I.domAPI=f(),I.insertStyleElement=C(),m()(b.Z,I),b.Z&&b.Z.locals&&b.Z.locals;const w=document.createElement("div");w.setAttribute("id","content");const x=document.getElementById("main");var O;O=["menu","contact"],e("nav","","main","header-menu"),e("div","","header-menu","header-menu-left"),e("div","","header-menu","header-menu-right"),e("h1","PRESTOPRESTO","header-menu-left"),e("ul","","header-menu-right","menu-ul"),O.forEach((n=>e("li",n.toUpperCase(),"menu-ul",n))),x.appendChild(w),document.getElementById("header-menu").onclick=function(n){let t=n.target;document.getElementById("content").textContent="","menu"==t.id?(e("h1","No Food","content"),e("p","Menu","content")):"contact"==t.id?(e("h1","Love to get in touch?","content"),e("p","Contact","content")):s()},s(),e("div","","main","footer"),e("span","Our address: Milkin Boulevard 2345, 403920 Brentpark MW - Tel.: 1-345-6754-983 - Mon-Sun from 6AM-12PM - Dogs Allowed","footer")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,